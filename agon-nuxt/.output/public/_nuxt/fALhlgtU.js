const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./CKTZlYUs.js","./DDBV5zyE.js","./BTqFdd_A.js","./B0dioNK6.js","./BxA8XtTG.js","./BFd7eVBW.js","./mj8hFRH2.js","./BhwMMY1F.js","./ModalVideo.DnGWXVPb.css","./oJDz6juh.js","./21irLcli.js","./BXnLhrug.js","./1tKxEqHW.js","./BMSQkwth.js","./BFin71TY.js","./3E08HyxX.js","./Bxp7kof6.js","./DqpCTOAQ.js","./D95KBJjh.js","./vUPcoIBH.js"])))=>i.map(i=>d[i]);
import{r as m,G as E,d as f,y as b,i,F as A,q as P,n as L,o as l,z as D,A as h,$ as t,a1 as o,B as I}from"./BTqFdd_A.js";const R={key:0},B={__name:"index",setup(V){const _=e=>({"page-blocks.hero-about-block":t(()=>o(()=>import("./CKTZlYUs.js"),__vite__mapDeps([0,1,2,3,4,5]),import.meta.url)),"page-blocks.content-image-block":t(()=>o(()=>import("./mj8hFRH2.js"),__vite__mapDeps([6,7,2,8,3,4,5]),import.meta.url)),"page-blocks.cards-block":t(()=>o(()=>import("./oJDz6juh.js"),__vite__mapDeps([9,2,3,4,5]),import.meta.url)),"page-blocks.process-block":t(()=>o(()=>import("./21irLcli.js"),__vite__mapDeps([10,3,2,4,5]),import.meta.url)),"page-blocks.faq-block":t(()=>o(()=>import("./BXnLhrug.js"),__vite__mapDeps([11,12,2,3,13,4,5]),import.meta.url)),"page-blocks.service-page-banner-block":t(()=>o(()=>import("./BFin71TY.js"),__vite__mapDeps([14,1,2,3,13,4,5]),import.meta.url)),"page-blocks.partner-block":t(()=>o(()=>import("./3E08HyxX.js"),__vite__mapDeps([15,3,2,4,5]),import.meta.url)),"page-blocks.card-block-layout-two":t(()=>o(()=>import("./Bxp7kof6.js"),__vite__mapDeps([16,17,2,3,4,5]),import.meta.url)),"page-blocks.two-col-image-content-block":t(()=>o(()=>import("./D95KBJjh.js"),__vite__mapDeps([18,3,2,4,5]),import.meta.url)),"page-blocks.contact-us":t(()=>o(()=>import("./vUPcoIBH.js"),__vite__mapDeps([19,2,3,4,5]),import.meta.url))})[e]||null,a=m(null),c=m("Loading or no data available..."),d=E(),v=f(()=>!a.value||!Array.isArray(a.value.Blocks)?[]:a.value.Blocks.filter(e=>e&&e.__component&&_(e.__component))),g=async e=>{try{const r=I().$strapiBaseUrl,n=await(await fetch(`${r}/api/sitemaps?populate=Blocks`)).json();if(n!=null&&n.data){const p=n.data.find(k=>{var u;return((u=k.PageURL)==null?void 0:u.trim().toLowerCase())===e.trim().toLowerCase()});if(!p){console.error(`Page with slug "${e}" not found.`),c.value=`Error: Page with slug "${e}" not found.`;return}a.value=p}else c.value="No data received from API."}catch(r){console.error("Error fetching data:",r),c.value="Failed to fetch data from the API."}};return b(()=>{const e=d.params.slug;e&&(a.value=null,g(e))}),(e,r)=>a.value?(l(),i("div",R,[(l(!0),i(A,null,P(v.value,s=>(l(),i("div",{key:s.id},[(l(),D(h(_(s.__component)),{data:s},null,8,["data"]))]))),128))])):L("",!0)}};export{B as default};
